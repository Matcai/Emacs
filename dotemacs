;; !-------------------------------*start*-------------------------!
;; close menu tool bar and some mode...
(tool-bar-mode     -1)
;;(menu-bar-mode     -1)
(scroll-bar-mode   -1)
(auto-save-mode    -1)
(global-linum-mode  t)
(load-theme 'misterioso t)
;; !-------------------------------*end*-------------------------!

;; !-------------------------------*start*-------------------------!
;; global-key binding
(global-set-key (kbd "M-m") 'set-mark-command)
(global-set-key (kbd "C-w") 'backward-kill-word)
(global-set-key (kbd "C-<backspace>") 'kill-region)

;; setq configure 
(setq     default-frame-alist '((width . 140) (height . 40) (left . 460) ))
(set-default-font "-*-Monaco-normal-normal-normal-*-13-*-*-*-m-0-iso10646-1")
(setq     auto-save-default            nil)
(setq	  column-number-mode t)

;; !-------------------------------*end*---------------------------!
;; el-get 包管理插件，可以通过调用github 上的开源插件，或者MELPA 上的可用包进行安装
;; 通过 M-x el-get-install RET package-name RET 进行安装
;; 方便快捷
;; el-get 上安装的包后，其他途径比如package 上有melpa 安装的相同包不能同时存在，
;; 否则提示冲突，也就是不能安装两次同一个包
;; 安装el-get 的方法可以通过github,emacswiki等地方进行下载的包进行安装
;; 基本配置
(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
(unless (require 'el-get nil 'noerror)
  (with-current-buffer
      (url-retrieve-synchronously
       "https://raw.github.com/dimitri/el-get/master/el-get-install.el")
    (goto-char (point-max))
    (eval-print-last-sexp))
  (require 'el-get)
  )
(el-get 'sync)

;; 可选的安装方法，通过MELPA 上的包进行安装el-get
;; (unless (require 'el-get nil 'noerror)
;;   (require 'package)
;;   (add-to-list 'package-archives
;;  	       '("melpa" . "http://melpa.org/packages/")
;;  	       )
;;   (package-refresh-contents)
;;   (package-initialize)
;;   (package-install 'el-get)
;;   (require 'el-get)
;;   )
;; !-------------------------------*start*-------------------------!
;;add some package-archives
(require 'package)
(add-to-list 'package-archives
	     '("elpa" . "http://tromey.com/elpa/")
	     t)
 
(add-to-list 'package-archives
	     '("melpa" . "http://melpa.milkbox.net/packages/")
	     t)
 
(add-to-list 'package-archives 
	     '("marmalade" . "http://marmalade-repo.org/packages/")
	     t)
(add-to-list 'package-archives
	     '("org" . "http://orgmode.org/elpa/")
	     t)
 
(package-initialize)


;; 定义一个函数去自动判断及安装指定的包，需要前面配置好包源

(defun autoinstall( *packagename* )
  (unless (require *packagename* nil 'noerror)
    (package-install *packagename*)
    (package-refresh-contents)
    (require *packagename*)
    )  
  )


(autoinstall 'auto-complete)
(global-auto-complete-mode t)

(autoinstall 'auto-complete-config)
(ac-config-default)

(autoinstall 'yasnippet)
(yas-global-mode t)

(autoinstall 'elpy)
(elpy-enable)

;; jedi setup 自动补全及提示 Python 函数或语句
(add-hook 'python-mode-hook 'jedi:setup)
(setq jedi:setup-keys t)
(setq jedi:complete-on-dot t)
(setq python-indent-guess-indent-offset nil)

;; 添加c 函数库头文件的补全
(defun my:ac-c-header-init ()
  (require 'auto-complete-c-headers)
  (add-to-list 'ac-sources 'ac-source-c-headers)
  (add-to-list 'achead:include-directories '"/usr/include")
  )
(add-hook 'c-mode-hook 'my:ac-c-header-init)

;; !-------------------------------*other*-------------------------!

;;(global-set-key (kbd "M-DEL") 'backward-kill-word)
(require 'switch-window)
(global-set-key (kbd "M-i") 'switch-window)

;; !-------------------------------*org-mode*-------------------------!
;; org-mode
(setq load-path (cons "~/.emacs.d/elpa/org-8.3.4/lisp" load-path))
(add-hook 'org-mode-hook 
(lambda () (setq truncate-lines nil)))
(require 'org-install)



;; markdown hook
(add-hook 'markdown-mode-hook 'auto-complete-mode)
;;(global-ede-mode t)

;; sr-speedbar 侧边栏的配置
(autoinstall 'sr-speedbar)
(setq sr-speedbar-right-side nil)
(setq sr-speedbar-width 12)
;;(setq dframe-update-speed t)
(setq speedbar-show-unknown-files t)
(add-hook 'after-init-hook '(lambda () (sr-speedbar-toggle)))

;;(global-set-key (kbd "<f5>")
;; 		(lambda ()
;; 		  (interactive)
;; 		  (sr-speedbar-toggle)
;; 		  )
;; 		)
